<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 xmlns:controls="com.evola.driving.controls.*"
		 initialize="onInitialize(event)"
		 backgroundColor="#FFFFFF"
		 width="300"
		 borderColor="#FF981D"
		 borderStyle="solid"
		 paddingLeft="5"
		 paddingRight="5"
		 paddingTop="10"
		 paddingBottom="10"
		 xmlns:util="com.evola.driving.util.*">

	<mx:VBox id="boxLinks"
			 width="100%">
		<controls:LinkLabel text="Uči samo omiljene"
							click="onLearn(event)"/>
		<controls:LinkLabel text="Proveri samo omiljene"
							click="onTest(event)"/>
	</mx:VBox>

	<mx:Script>
		<![CDATA[
			import com.evola.driving.util.PageManager;
			
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.events.FlexMouseEvent;
			import mx.events.SandboxMouseEvent;
			import mx.managers.PopUpManager;

			public var lessonId : String;
			public var groupId : int;


			public static function show(event:MouseEvent, groupId : int, lessonId : String):void
			{

				var qp:FavoriteQuestionsDropdown=new FavoriteQuestionsDropdown();
				qp.groupId = groupId;
				qp.lessonId = lessonId;

				qp.x=event.stageX - qp.width;
				qp.y=event.stageY;
				
				//moramo pomeriti formu desno i gore ako je van ekrana
				qp.x = Math.max(0, qp.x);

				PopUpManager.addPopUp(qp, FlexGlobals.topLevelApplication as DisplayObject, false);
			}

			private function close():void
			{

				PopUpManager.removePopUp(this);
			}

			protected function onInitialize(event:FlexEvent):void
			{

				this.addEventListener(FlexMouseEvent.MOUSE_DOWN_OUTSIDE, dropdown_mouseOutsideHandler);
				this.addEventListener(FlexMouseEvent.MOUSE_WHEEL_OUTSIDE, dropdown_mouseOutsideHandler);
				this.addEventListener(SandboxMouseEvent.MOUSE_DOWN_SOMEWHERE, dropdown_mouseOutsideHandler);
				this.addEventListener(SandboxMouseEvent.MOUSE_WHEEL_SOMEWHERE, dropdown_mouseOutsideHandler);
			}

			private function dropdown_mouseOutsideHandler(event:Event):void
			{

				if (event is MouseEvent)
				{
					var mouseEvent:MouseEvent=MouseEvent(event);
					if (mouseEvent.target != this)
						// the dropdown's items can dispatch a mouseDownOutside
						// event which then bubbles up to us
						return;

					if (!hitTestPoint(mouseEvent.stageX, mouseEvent.stageY, true))
					{
						close();
					}
				}
				else if (event is SandboxMouseEvent)
				{
					close();
				}
			}
			
			protected function onLearn(event:MouseEvent):void
			{
				close();
				
				PageManager.selectPage("LearningSession", {groupId: groupId, lessonId: lessonId, type: "learn", isPartialLesson: true, isFavorite : true});
			}
			
			protected function onTest(event:MouseEvent):void
			{
				close();
				
				PageManager.selectPage("LearningSession", {groupId: groupId, lessonId: lessonId, type: "test", isPartialLesson: true, isFavorite : true});				
			}
			
		]]>
	</mx:Script>

</mx:VBox>
